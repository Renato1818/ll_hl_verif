
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.37 (git sha1 a5c7f69ed8f, clang 14.0.6 -fPIC -Os)


-- Executing script file `design_btor.ys' --

1. Executing RTLIL frontend.
Input filename: design_prep.il

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \alu

2.2. Analyzing design hierarchy..
Top module:  \alu
Removed 0 unused modules.
Module alu directly or indirectly contains formal properties -> setting "keep" attribute.

3. Executing FORMALFF pass.

4. Executing FLATTEN pass (flatten design).

5. Executing SETUNDEF pass (replace undef values with defined constants).

6. Executing OPT pass (performing simple optimizations).

6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alu.

6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alu'.
Removed a total of 0 cells.

6.3. Executing OPT_DFF pass (perform DFF optimizations).

6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alu..

6.5. Finished fast OPT passes.

7. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

8. Printing statistics.

=== alu ===

   Number of wires:                282
   Number of wire bits:            514
   Number of public wires:          82
   Number of public wire bits:     160
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                284
     $add                           20
     $and                           12
     $anyinit                       19
     $anyseq                        32
     $assert                        13
     $assume                         1
     $eq                            34
     $ff                            11
     $gt                             4
     $logic_not                     15
     $logic_or                       9
     $mul                            4
     $mux                           99
     $not                            2
     $or                             1
     $pmux                           1
     $sub                            4
     $xor                            3

9. Executing BTOR backend.

9.1. Executing BMUXMAP pass.

9.2. Executing DEMUXMAP pass.

9.3. Executing BWMUXMAP pass.

10. Executing BTOR backend.

10.1. Executing BMUXMAP pass.

10.2. Executing DEMUXMAP pass.

10.3. Executing BWMUXMAP pass.

End of script. Logfile hash: 0630887516, CPU: user 0.04s system 0.01s, MEM: 16.12 MB peak
Yosys 0.37 (git sha1 a5c7f69ed8f, clang 14.0.6 -fPIC -Os)
Time spent: 21% 4x write_btor (0 sec), 19% 1x opt_expr (0 sec), ...
