initial
assume (= [$auto$async2sync.cc:171:execute$410] #b00000)
assume (= [$formal$fifo.sv:134$24_EN] false)
assume (= [$formal$fifo.sv:189$28_EN] false)
assume (= [_witness_.anyinit_procdff_353] #x0)
assume (= [_witness_.anyinit_procdff_354] false)
assume (= [_witness_.anyinit_procdff_357] #x0)
assume (= [_witness_.anyinit_procdff_358] false)
assume (= [_witness_.anyinit_procdff_360] #b10000)
assume (= [_witness_.anyinit_procdff_361] #b10000)
assume (= [_witness_.anyinit_procdff_362] #b10000)
assume (= [_witness_.anyinit_procdff_363] #x0)
assume (= [_witness_.anyinit_procdff_364] #x00000001)
assume (= [_witness_.anyinit_procdff_365] #x0)
assume (= [_witness_.anyinit_procdff_366] #x00000001)
assume (= [_witness_.anyinit_procdff_367] true)
assume (= [_witness_.anyinit_procdff_369] true)
assume (= [_witness_.anyinit_procdff_371] true)
assume (= [_witness_.anyinit_procdff_373] true)
assume (= [_witness_.anyinit_procdff_375] true)
assume (= [_witness_.anyinit_procdff_377] true)
assume (= [_witness_.anyinit_procdff_379] true)
assume (= [_witness_.anyinit_procdff_381] true)
assume (= [_witness_.anyinit_procdff_383] false)
assume (= [_witness_.anyinit_procdff_385] true)
assume (= [_witness_.anyinit_procdff_387] false)
assume (= [_witness_.anyinit_procdff_389] false)
assume (= [_witness_.anyinit_procdff_391] false)
assume (= [_witness_.anyinit_procdff_393] false)
assume (= [_witness_.anyinit_procdff_395] false)
assume (= [_witness_.anyinit_procdff_397] false)
assume (= [fifo_reader.$auto$async2sync.cc:171:execute$412] #x0)
assume (= [fifo_writer.$auto$async2sync.cc:171:execute$412] #x0)
assume (= [past_nren] false)
assume (= [past_nwen] false)
assume (= (select [data] #x0) #x00)
assume (= (select [data] #x1) #x10)

state 0
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x04)
assume (= [wen] true)

state 1
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x10)
assume (= [wen] true)

state 2
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x01)
assume (= [wen] true)

state 3
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x40)
assume (= [wen] true)

state 4
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x00)
assume (= [wen] true)

state 5
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x20)
assume (= [wen] true)

state 6
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x80)
assume (= [wen] true)

state 7
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x30)
assume (= [wen] true)

state 8
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x00)
assume (= [wen] true)

state 9
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x00)
assume (= [wen] true)

state 10
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x00)
assume (= [wen] true)

state 11
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x00)
assume (= [wen] true)

state 12
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x00)
assume (= [wen] true)

state 13
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #xf4)
assume (= [wen] true)

state 14
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x00)
assume (= [wen] true)

state 15
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x00)
assume (= [wen] true)

state 16
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x00)
assume (= [wen] true)

state 17
assume (= [clk] false)
assume (= [ren] false)
assume (= [rst] false)
assume (= [wdata] #x00)
assume (= [wen] true)

state 18
assume (= [clk] false)
assume (= [ren] true)
assume (= [rst] true)
assume (= [wdata] #x00)
assume (= [wen] false)
