; SMT-LIBv2 description generated by Yosys 0.37 (git sha1 a5c7f69ed8f, clang 14.0.6 -fPIC -Os)
; yosys-smt2-module $paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000
(declare-sort |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s| 0)
(declare-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_is| (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|) Bool)
(declare-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#0| (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|) Bool) ; \rst
; yosys-smt2-input rst 1
; yosys-smt2-wire rst 1
; yosys-smt2-witness {"offset": 0, "path": ["\\rst"], "smtname": "rst", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n rst| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) Bool (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#0| state))
(declare-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#1| (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|) Bool) ; \en
; yosys-smt2-input en 1
; yosys-smt2-wire en 1
; yosys-smt2-witness {"offset": 0, "path": ["\\en"], "smtname": "en", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n en| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) Bool (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#1| state))
(declare-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#2| (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n clk| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) Bool (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#2| state))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:171:execute$412"], "smtname": 3, "smtoffset": 0, "type": "reg", "width": 4}
(declare-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#3| (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|) (_ BitVec 4)) ; $auto$async2sync.cc:171:execute$412
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#4| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) (_ BitVec 4) (ite (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#0| state) #b0000 (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#3| state))) ; \addr
; yosys-smt2-output addr 4
; yosys-smt2-wire addr 4
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n addr| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) (_ BitVec 4) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#4| state))
; yosys-smt2-register $auto$async2sync.cc:171:execute$412 4
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n $auto$async2sync.cc:171:execute$412| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) (_ BitVec 4) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#3| state))
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#5| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) (_ BitVec 1) (bvnot (ite (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#2| state) #b1 #b0))) ; $auto$rtlil.cc:2461:Not$486
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$487
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_u 0| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) Bool (or (= ((_ extract 0 0) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#5| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$487
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#6| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) (_ BitVec 4) (bvadd (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#4| state) #b0001)) ; $add$fifo.sv:18$218_Y
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#7| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) Bool (= (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#4| state) #b1111)) ; $eq$fifo.sv:15$217_Y
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#8| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) (_ BitVec 4) (ite (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#7| state) #b0000 (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#6| state))) ; $procmux$221_Y
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#9| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) (_ BitVec 4) (ite (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#1| state) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#8| state) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#4| state))) ; $0\addr[3:0]
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#10| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) (_ BitVec 4) (ite (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#0| state) #b0000 (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#9| state))) ; $auto$rtlil.cc:2558:Mux$415
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_a| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) Bool true)
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_u| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) Bool 
  (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_u 0| state)
)
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_i| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) Bool 
  (= (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#3| state) #b0000) ; $auto$async2sync.cc:171:execute$412
)
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_h| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) Bool true)
(define-fun |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_t| ((state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|) (next_state |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)) Bool 
  (= (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#10| state) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000#3| next_state)) ; $procdff$351 $auto$async2sync.cc:171:execute$412
) ; end of module $paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000
; yosys-smt2-module fifo
(declare-sort |fifo_s| 0)
(declare-fun |fifo_is| (|fifo_s|) Bool)
(declare-fun |fifo#0| (|fifo_s|) Bool) ; \ren
(declare-fun |fifo#1| (|fifo_s|) Bool) ; \wen
(define-fun |fifo#2| ((state |fifo_s|)) Bool (not (or  (|fifo#1| state) false))) ; $logic_not$fifo.sv:127$145_Y
(define-fun |fifo#3| ((state |fifo_s|)) Bool (and (or  (|fifo#0| state) false) (or  (|fifo#2| state) false))) ; $logic_and$fifo.sv:127$146_Y
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:171:execute$410"], "smtname": 4, "smtoffset": 0, "type": "reg", "width": 5}
(declare-fun |fifo#4| (|fifo_s|) (_ BitVec 5)) ; $auto$async2sync.cc:171:execute$410
(declare-fun |fifo#5| (|fifo_s|) (_ BitVec 1)) ; \rst
(define-fun |fifo#6| ((state |fifo_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) #b00000 (|fifo#4| state))) ; \data_count
(define-fun |fifo#7| ((state |fifo_s|)) Bool (not (or  (= ((_ extract 0 0) (|fifo#6| state)) #b1) (= ((_ extract 1 1) (|fifo#6| state)) #b1) (= ((_ extract 2 2) (|fifo#6| state)) #b1) (= ((_ extract 3 3) (|fifo#6| state)) #b1) (= ((_ extract 4 4) (|fifo#6| state)) #b1)))) ; $eq$fifo.sv:110$116_Y
(define-fun |fifo#8| ((state |fifo_s|)) Bool (and (or  (|fifo#3| state) false) (or  (|fifo#7| state) false))) ; \wskip
; yosys-smt2-wire wskip 1
(define-fun |fifo_n wskip| ((state |fifo_s|)) Bool (|fifo#8| state))
; yosys-smt2-input wen 1
; yosys-smt2-wire wen 1
; yosys-smt2-witness {"offset": 0, "path": ["\\wen"], "smtname": "wen", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |fifo_n wen| ((state |fifo_s|)) Bool (|fifo#1| state))
(declare-fun |fifo#9| (|fifo_s|) (_ BitVec 8)) ; \wdata
; yosys-smt2-input wdata 8
; yosys-smt2-wire wdata 8
; yosys-smt2-witness {"offset": 0, "path": ["\\wdata"], "smtname": "wdata", "smtoffset": 0, "type": "input", "width": 8}
(define-fun |fifo_n wdata| ((state |fifo_s|)) (_ BitVec 8) (|fifo#9| state))
; yosys-smt2-cell $paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000 fifo_writer
; yosys-smt2-witness {"path": ["\\fifo_writer"], "smtname": "fifo_writer", "type": "cell"}
(declare-fun |fifo#10| (|fifo_s|) (_ BitVec 4)) ; \waddr
(declare-fun |fifo_h fifo_writer| (|fifo_s|) |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)
; yosys-smt2-wire waddr 4
(define-fun |fifo_n waddr| ((state |fifo_s|)) (_ BitVec 4) (|fifo#10| state))
; yosys-smt2-input rst 1
; yosys-smt2-wire rst 1
; yosys-smt2-witness {"offset": 0, "path": ["\\rst"], "smtname": "rst", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |fifo_n rst| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#5| state)) #b1))
(define-fun |fifo#11| ((state |fifo_s|)) Bool (not (or  (|fifo#0| state) false))) ; $logic_not$fifo.sv:125$138_Y
(define-fun |fifo#12| ((state |fifo_s|)) Bool (and (or  (|fifo#1| state) false) (or  (|fifo#11| state) false))) ; $logic_and$fifo.sv:125$139_Y
(define-fun |fifo#13| ((state |fifo_s|)) Bool (bvuge (|fifo#6| state) #b10000)) ; $ge$fifo.sv:80$56_Y
(define-fun |fifo#14| ((state |fifo_s|)) Bool (and (or  (|fifo#12| state) false) (or  (|fifo#13| state) false))) ; \rskip
; yosys-smt2-wire rskip 1
(define-fun |fifo_n rskip| ((state |fifo_s|)) Bool (|fifo#14| state))
; yosys-smt2-input ren 1
; yosys-smt2-wire ren 1
; yosys-smt2-witness {"offset": 0, "path": ["\\ren"], "smtname": "ren", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |fifo_n ren| ((state |fifo_s|)) Bool (|fifo#0| state))
; yosys-smt2-memory data 4 8 1 1 sync
; yosys-smt2-witness {"path": ["\\data"], "rom": false, "size": 16, "smtname": "data", "statebv": false, "type": "mem", "uninitialized": [{"offset": 0, "width": 128}], "width": 8}
(declare-fun |fifo#15#0| (|fifo_s|) (Array (_ BitVec 4) (_ BitVec 8))) ; data
(define-fun |fifo_m data| ((state |fifo_s|)) (Array (_ BitVec 4) (_ BitVec 8)) (|fifo#15#0| state))
; yosys-smt2-cell $paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000 fifo_reader
; yosys-smt2-witness {"path": ["\\fifo_reader"], "smtname": "fifo_reader", "type": "cell"}
(declare-fun |fifo#16| (|fifo_s|) (_ BitVec 4)) ; \raddr
(declare-fun |fifo_h fifo_reader| (|fifo_s|) |$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_s|)
(define-fun |fifo_m:R0A data| ((state |fifo_s|)) (_ BitVec 4) (|fifo#16| state)) ; \raddr
(define-fun |fifo#17| ((state |fifo_s|)) (_ BitVec 8) (select (|fifo#15#0| state) (|fifo_m:R0A data| state))) ; \rdata
(define-fun |fifo_m:R0D data| ((state |fifo_s|)) (_ BitVec 8) (|fifo#17| state))
; yosys-smt2-output rdata 8
; yosys-smt2-wire rdata 8
(define-fun |fifo_n rdata| ((state |fifo_s|)) (_ BitVec 8) (|fifo#17| state))
; yosys-smt2-wire raddr 4
(define-fun |fifo_n raddr| ((state |fifo_s|)) (_ BitVec 4) (|fifo#16| state))
(define-fun |fifo#18| ((state |fifo_s|)) Bool (= (|fifo#6| state) #b10000)) ; \full
; yosys-smt2-output full 1
; yosys-smt2-wire full 1
(define-fun |fifo_n full| ((state |fifo_s|)) Bool (|fifo#18| state))
(define-fun |fifo#19| ((state |fifo_s|)) (_ BitVec 1) (bvnot (|fifo#5| state))) ; $not$fifo.sv:74$52_Y
(define-fun |fifo#20| ((state |fifo_s|)) Bool (and (or  (|fifo#7| state) false) (or  (= ((_ extract 0 0) (|fifo#19| state)) #b1) false))) ; \empty
; yosys-smt2-output empty 1
; yosys-smt2-wire empty 1
(define-fun |fifo_n empty| ((state |fifo_s|)) Bool (|fifo#20| state))
; yosys-smt2-wire data_count 5
(define-fun |fifo_n data_count| ((state |fifo_s|)) (_ BitVec 5) (|fifo#6| state))
; yosys-smt2-output count 5
; yosys-smt2-wire count 5
(define-fun |fifo_n count| ((state |fifo_s|)) (_ BitVec 5) (|fifo#6| state))
(declare-fun |fifo#21| (|fifo_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |fifo_n clk| ((state |fifo_s|)) Bool (|fifo#21| state))
(define-fun |fifo#22| ((state |fifo_s|)) (_ BitVec 5) (bvadd (concat #b0 (|fifo#10| state)) #b10000)) ; $add$fifo.sv:93$64_Y
(define-fun |fifo#23| ((state |fifo_s|)) (_ BitVec 5) (bvsub (|fifo#22| state) (concat #b0 (|fifo#16| state)))) ; $sub$fifo.sv:93$65_Y [4:0]
(define-fun |fifo#24| ((state |fifo_s|)) (_ BitVec 5) (bvsub (concat #b0 (|fifo#10| state)) (concat #b0 (|fifo#16| state)))) ; { $sub$fifo.sv:92$63_Y [31] $sub$fifo.sv:92$63_Y [3:0] }
(define-fun |fifo#25| ((state |fifo_s|)) Bool (bvuge (|fifo#10| state) (|fifo#16| state))) ; $ge$fifo.sv:91$62_Y
(define-fun |fifo#26| ((state |fifo_s|)) (_ BitVec 5) (ite (|fifo#25| state) (|fifo#24| state) (|fifo#23| state))) ; \addr_diff
; yosys-smt2-wire addr_diff 5
(define-fun |fifo_n addr_diff| ((state |fifo_s|)) (_ BitVec 5) (|fifo#26| state))
; yosys-smt2-anyseq fifo#27 4 $auto$setundef.cc:533:execute$480
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_480"], "smtname": 27, "smtoffset": 0, "type": "seq", "width": 4}
(declare-fun |fifo#27| (|fifo_s|) (_ BitVec 4)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_480
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_480 4
(define-fun |fifo_n _witness_.anyseq_auto_setundef_cc_533_execute_480| ((state |fifo_s|)) (_ BitVec 4) (|fifo#27| state))
; yosys-smt2-anyseq fifo#28 8 $auto$setundef.cc:533:execute$478
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_478"], "smtname": 28, "smtoffset": 0, "type": "seq", "width": 8}
(declare-fun |fifo#28| (|fifo_s|) (_ BitVec 8)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_478
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_478 8
(define-fun |fifo_n _witness_.anyseq_auto_setundef_cc_533_execute_478| ((state |fifo_s|)) (_ BitVec 8) (|fifo#28| state))
; yosys-smt2-anyseq fifo#29 1 $auto$setundef.cc:533:execute$476
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_476"], "smtname": 29, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |fifo#29| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_476
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_476 1
(define-fun |fifo_n _witness_.anyseq_auto_setundef_cc_533_execute_476| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#29| state)) #b1))
; yosys-smt2-anyseq fifo#30 1 $auto$setundef.cc:533:execute$474
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_474"], "smtname": 30, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |fifo#30| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_474
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_474 1
(define-fun |fifo_n _witness_.anyseq_auto_setundef_cc_533_execute_474| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#30| state)) #b1))
; yosys-smt2-anyseq fifo#31 1 $auto$setundef.cc:533:execute$472
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_472"], "smtname": 31, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |fifo#31| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_472
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_472 1
(define-fun |fifo_n _witness_.anyseq_auto_setundef_cc_533_execute_472| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#31| state)) #b1))
; yosys-smt2-anyseq fifo#32 1 $auto$setundef.cc:533:execute$470
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_470"], "smtname": 32, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |fifo#32| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_470
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_470 1
(define-fun |fifo_n _witness_.anyseq_auto_setundef_cc_533_execute_470| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#32| state)) #b1))
; yosys-smt2-anyseq fifo#33 1 $auto$setundef.cc:533:execute$468
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_468"], "smtname": 33, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |fifo#33| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_468
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_468 1
(define-fun |fifo_n _witness_.anyseq_auto_setundef_cc_533_execute_468| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#33| state)) #b1))
; yosys-smt2-anyseq fifo#34 1 $auto$setundef.cc:533:execute$466
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_466"], "smtname": 34, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |fifo#34| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_466
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_466 1
(define-fun |fifo_n _witness_.anyseq_auto_setundef_cc_533_execute_466| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#34| state)) #b1))
; yosys-smt2-anyseq fifo#35 1 $auto$setundef.cc:533:execute$464
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_464"], "smtname": 35, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |fifo#35| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_464
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_464 1
(define-fun |fifo_n _witness_.anyseq_auto_setundef_cc_533_execute_464| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#35| state)) #b1))
; yosys-smt2-anyseq fifo#36 1 $auto$setundef.cc:533:execute$462
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_462"], "smtname": 36, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |fifo#36| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_462
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_462 1
(define-fun |fifo_n _witness_.anyseq_auto_setundef_cc_533_execute_462| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#36| state)) #b1))
; yosys-smt2-anyseq fifo#37 1 $auto$setundef.cc:533:execute$460
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_460"], "smtname": 37, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |fifo#37| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_460
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_460 1
(define-fun |fifo_n _witness_.anyseq_auto_setundef_cc_533_execute_460| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#37| state)) #b1))
; yosys-smt2-anyseq fifo#38 1 $auto$setundef.cc:533:execute$458
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_458"], "smtname": 38, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |fifo#38| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_458
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_458 1
(define-fun |fifo_n _witness_.anyseq_auto_setundef_cc_533_execute_458| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#38| state)) #b1))
; yosys-smt2-anyinit fifo#39 1 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_397"], "smtname": 39, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |fifo#39| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_397
; yosys-smt2-register _witness_.anyinit_procdff_397 1
; yosys-smt2-wire _witness_.anyinit_procdff_397 1
(define-fun |fifo_n _witness_.anyinit_procdff_397| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#39| state)) #b1))
; yosys-smt2-anyinit fifo#40 1 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_393"], "smtname": 40, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |fifo#40| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_393
; yosys-smt2-register _witness_.anyinit_procdff_393 1
; yosys-smt2-wire _witness_.anyinit_procdff_393 1
(define-fun |fifo_n _witness_.anyinit_procdff_393| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#40| state)) #b1))
; yosys-smt2-anyinit fifo#41 1 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_385"], "smtname": 41, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |fifo#41| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_385
; yosys-smt2-register _witness_.anyinit_procdff_385 1
; yosys-smt2-wire _witness_.anyinit_procdff_385 1
(define-fun |fifo_n _witness_.anyinit_procdff_385| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#41| state)) #b1))
; yosys-smt2-anyinit fifo#42 1 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_381"], "smtname": 42, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |fifo#42| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_381
; yosys-smt2-register _witness_.anyinit_procdff_381 1
; yosys-smt2-wire _witness_.anyinit_procdff_381 1
(define-fun |fifo_n _witness_.anyinit_procdff_381| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#42| state)) #b1))
; yosys-smt2-anyinit fifo#43 1 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_379"], "smtname": 43, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |fifo#43| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_379
; yosys-smt2-register _witness_.anyinit_procdff_379 1
; yosys-smt2-wire _witness_.anyinit_procdff_379 1
(define-fun |fifo_n _witness_.anyinit_procdff_379| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#43| state)) #b1))
; yosys-smt2-anyinit fifo#44 1 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_377"], "smtname": 44, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |fifo#44| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_377
; yosys-smt2-register _witness_.anyinit_procdff_377 1
; yosys-smt2-wire _witness_.anyinit_procdff_377 1
(define-fun |fifo_n _witness_.anyinit_procdff_377| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#44| state)) #b1))
; yosys-smt2-anyinit fifo#45 1 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_375"], "smtname": 45, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |fifo#45| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_375
; yosys-smt2-register _witness_.anyinit_procdff_375 1
; yosys-smt2-wire _witness_.anyinit_procdff_375 1
(define-fun |fifo_n _witness_.anyinit_procdff_375| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#45| state)) #b1))
; yosys-smt2-anyinit fifo#46 1 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_373"], "smtname": 46, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |fifo#46| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_373
; yosys-smt2-register _witness_.anyinit_procdff_373 1
; yosys-smt2-wire _witness_.anyinit_procdff_373 1
(define-fun |fifo_n _witness_.anyinit_procdff_373| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#46| state)) #b1))
; yosys-smt2-anyinit fifo#47 1 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_371"], "smtname": 47, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |fifo#47| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_371
; yosys-smt2-register _witness_.anyinit_procdff_371 1
; yosys-smt2-wire _witness_.anyinit_procdff_371 1
(define-fun |fifo_n _witness_.anyinit_procdff_371| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#47| state)) #b1))
; yosys-smt2-anyinit fifo#48 1 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_369"], "smtname": 48, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |fifo#48| (|fifo_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_369
; yosys-smt2-register _witness_.anyinit_procdff_369 1
; yosys-smt2-wire _witness_.anyinit_procdff_369 1
(define-fun |fifo_n _witness_.anyinit_procdff_369| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#48| state)) #b1))
; yosys-smt2-anyinit fifo#49 32 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_366"], "smtname": 49, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |fifo#49| (|fifo_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_366
; yosys-smt2-register _witness_.anyinit_procdff_366 32
; yosys-smt2-wire _witness_.anyinit_procdff_366 32
(define-fun |fifo_n _witness_.anyinit_procdff_366| ((state |fifo_s|)) (_ BitVec 32) (|fifo#49| state))
; yosys-smt2-anyinit fifo#50 4 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_365"], "smtname": 50, "smtoffset": 0, "type": "init", "width": 4}
(declare-fun |fifo#50| (|fifo_s|) (_ BitVec 4)) ; \_witness_.anyinit_procdff_365
; yosys-smt2-register _witness_.anyinit_procdff_365 4
; yosys-smt2-wire _witness_.anyinit_procdff_365 4
(define-fun |fifo_n _witness_.anyinit_procdff_365| ((state |fifo_s|)) (_ BitVec 4) (|fifo#50| state))
; yosys-smt2-anyinit fifo#51 32 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_364"], "smtname": 51, "smtoffset": 0, "type": "init", "width": 32}
(declare-fun |fifo#51| (|fifo_s|) (_ BitVec 32)) ; \_witness_.anyinit_procdff_364
; yosys-smt2-register _witness_.anyinit_procdff_364 32
; yosys-smt2-wire _witness_.anyinit_procdff_364 32
(define-fun |fifo_n _witness_.anyinit_procdff_364| ((state |fifo_s|)) (_ BitVec 32) (|fifo#51| state))
; yosys-smt2-anyinit fifo#52 4 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_363"], "smtname": 52, "smtoffset": 0, "type": "init", "width": 4}
(declare-fun |fifo#52| (|fifo_s|) (_ BitVec 4)) ; \_witness_.anyinit_procdff_363
; yosys-smt2-register _witness_.anyinit_procdff_363 4
; yosys-smt2-wire _witness_.anyinit_procdff_363 4
(define-fun |fifo_n _witness_.anyinit_procdff_363| ((state |fifo_s|)) (_ BitVec 4) (|fifo#52| state))
; yosys-smt2-anyinit fifo#53 5 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_362"], "smtname": 53, "smtoffset": 0, "type": "init", "width": 5}
(declare-fun |fifo#53| (|fifo_s|) (_ BitVec 5)) ; \_witness_.anyinit_procdff_362
; yosys-smt2-register _witness_.anyinit_procdff_362 5
; yosys-smt2-wire _witness_.anyinit_procdff_362 5
(define-fun |fifo_n _witness_.anyinit_procdff_362| ((state |fifo_s|)) (_ BitVec 5) (|fifo#53| state))
; yosys-smt2-anyinit fifo#54 5 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_361"], "smtname": 54, "smtoffset": 0, "type": "init", "width": 5}
(declare-fun |fifo#54| (|fifo_s|) (_ BitVec 5)) ; \_witness_.anyinit_procdff_361
; yosys-smt2-register _witness_.anyinit_procdff_361 5
; yosys-smt2-wire _witness_.anyinit_procdff_361 5
(define-fun |fifo_n _witness_.anyinit_procdff_361| ((state |fifo_s|)) (_ BitVec 5) (|fifo#54| state))
; yosys-smt2-anyinit fifo#55 5 fifo.sv:96.5-140.8
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_360"], "smtname": 55, "smtoffset": 0, "type": "init", "width": 5}
(declare-fun |fifo#55| (|fifo_s|) (_ BitVec 5)) ; \_witness_.anyinit_procdff_360
; yosys-smt2-register _witness_.anyinit_procdff_360 5
; yosys-smt2-wire _witness_.anyinit_procdff_360 5
(define-fun |fifo_n _witness_.anyinit_procdff_360| ((state |fifo_s|)) (_ BitVec 5) (|fifo#55| state))
; yosys-smt2-witness {"offset": 0, "path": ["$formal$fifo.sv:189$28_EN"], "smtname": 56, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |fifo#56| (|fifo_s|) (_ BitVec 1)) ; $formal$fifo.sv:189$28_EN
; yosys-smt2-register $formal$fifo.sv:189$28_EN 1
(define-fun |fifo_n $formal$fifo.sv:189$28_EN| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#56| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$formal$fifo.sv:134$24_EN"], "smtname": 57, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |fifo#57| (|fifo_s|) (_ BitVec 1)) ; $formal$fifo.sv:134$24_EN
; yosys-smt2-register $formal$fifo.sv:134$24_EN 1
(define-fun |fifo_n $formal$fifo.sv:134$24_EN| ((state |fifo_s|)) Bool (= ((_ extract 0 0) (|fifo#57| state)) #b1))
; yosys-smt2-register $auto$async2sync.cc:171:execute$410 5
(define-fun |fifo_n $auto$async2sync.cc:171:execute$410| ((state |fifo_s|)) (_ BitVec 5) (|fifo#4| state))
(define-fun |fifo#58| ((state |fifo_s|)) (_ BitVec 1) (bvnot (ite (|fifo#21| state) #b1 #b0))) ; $auto$rtlil.cc:2461:Not$483
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$484
(define-fun |fifo_u 0| ((state |fifo_s|)) Bool (or (= ((_ extract 0 0) (|fifo#58| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$484
; yosys-smt2-assert 0 a_zero_out
(define-fun |fifo_a 0| ((state |fifo_s|)) Bool (or (= ((_ extract 0 0) (|fifo#39| state)) #b1) (not (= ((_ extract 0 0) (|fifo#57| state)) #b1)))) ; a_zero_out
; yosys-smt2-assert 1 a_waddr
(define-fun |fifo_a 1| ((state |fifo_s|)) Bool (or (= ((_ extract 0 0) (|fifo#43| state)) #b1) (not (= ((_ extract 0 0) (|fifo#56| state)) #b1)))) ; a_waddr
; yosys-smt2-assert 2 a_reset
(define-fun |fifo_a 2| ((state |fifo_s|)) Bool (or (= ((_ extract 0 0) (|fifo#40| state)) #b1) (not (= ((_ extract 0 0) (|fifo#57| state)) #b1)))) ; a_reset
; yosys-smt2-assert 3 a_raddr
(define-fun |fifo_a 3| ((state |fifo_s|)) Bool (or (= ((_ extract 0 0) (|fifo#44| state)) #b1) (not (= ((_ extract 0 0) (|fifo#56| state)) #b1)))) ; a_raddr
; yosys-smt2-assert 4 a_oflow2
(define-fun |fifo_a 4| ((state |fifo_s|)) Bool (or (= ((_ extract 0 0) (|fifo#47| state)) #b1) (not (= ((_ extract 0 0) (|fifo#56| state)) #b1)))) ; a_oflow2
; yosys-smt2-assert 5 a_oflow
(define-fun |fifo_a 5| ((state |fifo_s|)) Bool (or (= ((_ extract 0 0) (|fifo#48| state)) #b1) (not (= ((_ extract 0 0) (|fifo#56| state)) #b1)))) ; a_oflow
; yosys-smt2-assert 6 a_full
(define-fun |fifo_a 6| ((state |fifo_s|)) Bool (or (= ((_ extract 0 0) (|fifo#42| state)) #b1) (not (= ((_ extract 0 0) (|fifo#56| state)) #b1)))) ; a_full
; yosys-smt2-assert 7 a_empty
(define-fun |fifo_a 7| ((state |fifo_s|)) Bool (or (= ((_ extract 0 0) (|fifo#41| state)) #b1) (not (= ((_ extract 0 0) (|fifo#56| state)) #b1)))) ; a_empty
; yosys-smt2-assert 8 a_counts
(define-fun |fifo_a 8| ((state |fifo_s|)) Bool (or (= ((_ extract 0 0) (|fifo#45| state)) #b1) (not (= ((_ extract 0 0) (|fifo#56| state)) #b1)))) ; a_counts
; yosys-smt2-assert 9 a_count_diff
(define-fun |fifo_a 9| ((state |fifo_s|)) Bool (or (= ((_ extract 0 0) (|fifo#46| state)) #b1) (not (= ((_ extract 0 0) (|fifo#56| state)) #b1)))) ; a_count_diff
(define-fun |fifo#59| ((state |fifo_s|)) Bool (or  (|fifo#0| state) false  (|fifo#14| state) false)) ; $logic_or$fifo.sv:55$38_Y
(define-fun |fifo#60| ((state |fifo_s|)) Bool (or  (|fifo#1| state) false  (|fifo#8| state) false)) ; $logic_or$fifo.sv:47$37_Y
(define-fun |fifo#61| ((state |fifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) #b1 #b0)) ; $0$formal$fifo.sv:134$24_EN[0:0]$102
(define-fun |fifo#62| ((state |fifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) #b0 #b1)) ; $0$formal$fifo.sv:102$12_EN[0:0]$78
(define-fun |fifo#63| ((state |fifo_s|)) (_ BitVec 5) (bvadd (concat #b0 (|fifo#16| state)) #b00001)) ; $0$past$fifo.sv:118$5$0[31:0]$72
(define-fun |fifo#64| ((state |fifo_s|)) (_ BitVec 5) (bvadd (concat #b0 (|fifo#10| state)) #b00001)) ; $0$past$fifo.sv:121$7$0[31:0]$74
(define-fun |fifo#65| ((state |fifo_s|)) Bool (bvule (|fifo#6| state) #b10000)) ; $le$fifo.sv:102$109_Y
(define-fun |fifo#66| ((state |fifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) (|fifo#38| state) (ite (|fifo#65| state) #b1 #b0))) ; $0$formal$fifo.sv:102$12_CHECK[0:0]$77
(define-fun |fifo#67| ((state |fifo_s|)) Bool (bvult (concat #b0 (|fifo#10| state)) #b10000)) ; $lt$fifo.sv:103$110_Y
(define-fun |fifo#68| ((state |fifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) (|fifo#37| state) (ite (|fifo#67| state) #b1 #b0))) ; $0$formal$fifo.sv:103$13_CHECK[0:0]$79
(define-fun |fifo#69| ((state |fifo_s|)) Bool (= (|fifo#6| state) (|fifo#26| state))) ; $eq$fifo.sv:106$111_Y
(define-fun |fifo#70| ((state |fifo_s|)) Bool (not (or  (= ((_ extract 0 0) (|fifo#26| state)) #b1) (= ((_ extract 1 1) (|fifo#26| state)) #b1) (= ((_ extract 2 2) (|fifo#26| state)) #b1) (= ((_ extract 3 3) (|fifo#26| state)) #b1) (= ((_ extract 4 4) (|fifo#26| state)) #b1)))) ; $eq$fifo.sv:107$113_Y
(define-fun |fifo#71| ((state |fifo_s|)) Bool (and (or  (|fifo#18| state) false) (or  (|fifo#70| state) false))) ; $logic_and$fifo.sv:107$114_Y
(define-fun |fifo#72| ((state |fifo_s|)) Bool (or  (|fifo#69| state) false  (|fifo#71| state) false)) ; $logic_or$fifo.sv:106$115_Y
(define-fun |fifo#73| ((state |fifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) (|fifo#36| state) (ite (|fifo#72| state) #b1 #b0))) ; $0$formal$fifo.sv:106$14_CHECK[0:0]$81
(define-fun |fifo#74| ((state |fifo_s|)) Bool (= (|fifo#6| state) (|fifo#55| state))) ; $eq$fifo.sv:111$117_Y
(define-fun |fifo#75| ((state |fifo_s|)) Bool (or  (|fifo#7| state) false  (|fifo#74| state) false)) ; $logic_or$fifo.sv:110$118_Y
(define-fun |fifo#76| ((state |fifo_s|)) (_ BitVec 6) (bvadd (concat #b0 (|fifo#54| state)) #b000001)) ; $add$fifo.sv:112$119_Y
(define-fun |fifo#77| ((state |fifo_s|)) Bool (= (concat #b0 (|fifo#6| state)) (|fifo#76| state))) ; $eq$fifo.sv:112$120_Y
(define-fun |fifo#78| ((state |fifo_s|)) Bool (or  (|fifo#75| state) false  (|fifo#77| state) false)) ; $logic_or$fifo.sv:110$121_Y
(define-fun |fifo#79| ((state |fifo_s|)) (_ BitVec 6) (bvsub (concat #b0 (|fifo#53| state)) #b000001)) ; { $sub$fifo.sv:113$122_Y [31] $sub$fifo.sv:113$122_Y [4:0] }
(define-fun |fifo#80| ((state |fifo_s|)) Bool (= (concat #b000000000000000000000000000 (|fifo#6| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (concat ((_ extract 5 5) (|fifo#79| state)) (|fifo#79| state))))))))))))))))))))))))))))) ; $eq$fifo.sv:113$123_Y
(define-fun |fifo#81| ((state |fifo_s|)) Bool (or  (|fifo#78| state) false  (|fifo#80| state) false)) ; $logic_or$fifo.sv:110$124_Y
(define-fun |fifo#82| ((state |fifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) (|fifo#35| state) (ite (|fifo#81| state) #b1 #b0))) ; $0$formal$fifo.sv:110$15_CHECK[0:0]$83
(define-fun |fifo#83| ((state |fifo_s|)) Bool (not (or  (= ((_ extract 0 0) (|fifo#16| state)) #b1) (= ((_ extract 1 1) (|fifo#16| state)) #b1) (= ((_ extract 2 2) (|fifo#16| state)) #b1) (= ((_ extract 3 3) (|fifo#16| state)) #b1)))) ; $eq$fifo.sv:116$125_Y
(define-fun |fifo#84| ((state |fifo_s|)) Bool (= (|fifo#16| state) (|fifo#52| state))) ; $eq$fifo.sv:117$126_Y
(define-fun |fifo#85| ((state |fifo_s|)) Bool (or  (|fifo#83| state) false  (|fifo#84| state) false)) ; $logic_or$fifo.sv:116$127_Y
(define-fun |fifo#86| ((state |fifo_s|)) Bool (= (concat #b0000000000000000000000000000 (|fifo#16| state)) (|fifo#51| state))) ; $eq$fifo.sv:118$128_Y
(define-fun |fifo#87| ((state |fifo_s|)) Bool (or  (|fifo#85| state) false  (|fifo#86| state) false)) ; $logic_or$fifo.sv:116$129_Y
(define-fun |fifo#88| ((state |fifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) (|fifo#34| state) (ite (|fifo#87| state) #b1 #b0))) ; $0$formal$fifo.sv:116$16_CHECK[0:0]$85
(define-fun |fifo#89| ((state |fifo_s|)) Bool (not (or  (= ((_ extract 0 0) (|fifo#10| state)) #b1) (= ((_ extract 1 1) (|fifo#10| state)) #b1) (= ((_ extract 2 2) (|fifo#10| state)) #b1) (= ((_ extract 3 3) (|fifo#10| state)) #b1)))) ; $eq$fifo.sv:119$130_Y
(define-fun |fifo#90| ((state |fifo_s|)) Bool (= (|fifo#10| state) (|fifo#50| state))) ; $eq$fifo.sv:120$131_Y
(define-fun |fifo#91| ((state |fifo_s|)) Bool (or  (|fifo#89| state) false  (|fifo#90| state) false)) ; $logic_or$fifo.sv:119$132_Y
(define-fun |fifo#92| ((state |fifo_s|)) Bool (= (concat #b0000000000000000000000000000 (|fifo#10| state)) (|fifo#49| state))) ; $eq$fifo.sv:121$133_Y
(define-fun |fifo#93| ((state |fifo_s|)) Bool (or  (|fifo#91| state) false  (|fifo#92| state) false)) ; $logic_or$fifo.sv:119$134_Y
(define-fun |fifo#94| ((state |fifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) (|fifo#33| state) (ite (|fifo#93| state) #b1 #b0))) ; $0$formal$fifo.sv:119$17_CHECK[0:0]$87
(define-fun |fifo#95| ((state |fifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) (|fifo#32| state) #b1)) ; $0$formal$fifo.sv:124$18_CHECK[0:0]$89
(define-fun |fifo#96| ((state |fifo_s|)) Bool (not (or  (|fifo#20| state) false))) ; $logic_not$fifo.sv:126$142_Y
(define-fun |fifo#97| ((state |fifo_s|)) Bool (or  (|fifo#96| state) false  (|fifo#7| state) false)) ; $logic_or$fifo.sv:126$144_Y
(define-fun |fifo#98| ((state |fifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) (|fifo#31| state) (ite (|fifo#97| state) #b1 #b0))) ; $0$formal$fifo.sv:126$20_CHECK[0:0]$93
(define-fun |fifo#99| ((state |fifo_s|)) Bool (and (or  (|fifo#89| state) false) (or  (|fifo#83| state) false))) ; $logic_and$fifo.sv:134$153_Y
(define-fun |fifo#100| ((state |fifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) (ite (|fifo#99| state) #b1 #b0) (|fifo#30| state))) ; $0$formal$fifo.sv:134$24_CHECK[0:0]$101
(define-fun |fifo#101| ((state |fifo_s|)) Bool (not (or  (|fifo#18| state) false))) ; $logic_not$fifo.sv:124$135_Y
(define-fun |fifo#102| ((state |fifo_s|)) Bool (and (or  (|fifo#96| state) false) (or  (|fifo#101| state) false))) ; $logic_and$fifo.sv:138$156_Y
(define-fun |fifo#103| ((state |fifo_s|)) Bool (and (or  (|fifo#102| state) false) (or  (|fifo#7| state) false))) ; $logic_and$fifo.sv:138$158_Y
(define-fun |fifo#104| ((state |fifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) (ite (|fifo#103| state) #b1 #b0) (|fifo#29| state))) ; $0$formal$fifo.sv:138$26_CHECK[0:0]$105
(define-fun |fifo#105| ((state |fifo_s|)) (_ BitVec 5) (bvsub (|fifo#6| state) #b00001)) ; $sub$fifo.sv:70$49_Y [4:0]
(define-fun |fifo#106| ((state |fifo_s|)) Bool (bvugt (|fifo#6| state) #b00000)) ; $gt$fifo.sv:69$47_Y
(define-fun |fifo#107| ((state |fifo_s|)) Bool (and (or  (|fifo#3| state) false) (or  (|fifo#106| state) false))) ; $logic_and$fifo.sv:69$48_Y
(define-fun |fifo#108| ((state |fifo_s|)) (_ BitVec 5) (ite (|fifo#107| state) (|fifo#105| state) (|fifo#6| state))) ; $procmux$337_Y
(define-fun |fifo#109| ((state |fifo_s|)) (_ BitVec 5) (bvadd (|fifo#6| state) #b00001)) ; $add$fifo.sv:68$44_Y
(define-fun |fifo#110| ((state |fifo_s|)) Bool (bvult (|fifo#6| state) #b10000)) ; $lt$fifo.sv:67$42_Y
(define-fun |fifo#111| ((state |fifo_s|)) Bool (and (or  (|fifo#12| state) false) (or  (|fifo#110| state) false))) ; $logic_and$fifo.sv:67$43_Y
(define-fun |fifo#112| ((state |fifo_s|)) (_ BitVec 5) (ite (|fifo#111| state) (|fifo#109| state) (|fifo#108| state))) ; $0\data_count[4:0]
(define-fun |fifo#113| ((state |fifo_s|)) (_ BitVec 5) (ite (= ((_ extract 0 0) (|fifo#5| state)) #b1) #b00000 (|fifo#112| state))) ; $auto$rtlil.cc:2558:Mux$417
(define-fun |fifo#114| ((state |fifo_s|)) (_ BitVec 4) (ite (|fifo#1| state) (|fifo#10| state) (|fifo#27| state))) ; $0$memwr$\data$fifo.sv:40$10_ADDR[3:0]$30
(define-fun |fifo#115| ((state |fifo_s|)) (_ BitVec 8) (ite (|fifo#1| state) (|fifo#9| state) (|fifo#28| state))) ; $0$memwr$\data$fifo.sv:40$10_DATA[7:0]$31
(define-fun |fifo#116| ((state |fifo_s|)) (_ BitVec 1) (ite (|fifo#1| state) #b1 #b0)) ; $0$memwr$\data$fifo.sv:40$10_EN[7:0]$32 [7]
(define-fun |fifo_m:W0A data| ((state |fifo_s|)) (_ BitVec 4) (|fifo#114| state)) ; $0$memwr$\data$fifo.sv:40$10_ADDR[3:0]$30
(define-fun |fifo_m:W0D data| ((state |fifo_s|)) (_ BitVec 8) (|fifo#115| state)) ; $0$memwr$\data$fifo.sv:40$10_DATA[7:0]$31
(define-fun |fifo_m:W0M data| ((state |fifo_s|)) (_ BitVec 8) (concat (|fifo#116| state) (concat (|fifo#116| state) (concat (|fifo#116| state) (concat (|fifo#116| state) (concat (|fifo#116| state) (concat (|fifo#116| state) (concat (|fifo#116| state) (|fifo#116| state))))))))) ; { $0$memwr$\data$fifo.sv:40$10_EN[7:0]$32 [7] $0$memwr$\data$fifo.sv:40$10_EN[7:0]$32 [7] $0$memwr$\data$fifo.sv:40$10_EN[7:0]$32 [7] $0$memwr$\data$fifo.sv:40$10_EN[7:0]$32 [7] $0$memwr$\data$fifo.sv:40$10_EN[7:0]$32 [7] $0$memwr$\data$fifo.sv:40$10_EN[7:0]$32 [7] $0$memwr$\data$fifo.sv:40$10_EN[7:0]$32 [7] $0$memwr$\data$fifo.sv:40$10_EN[7:0]$32 [7] }
(define-fun |fifo#15#1| ((state |fifo_s|)) (Array (_ BitVec 4) (_ BitVec 8)) (ite (= (|fifo_m:W0M data| state) #b00000000) (|fifo#15#0| state) (store (|fifo#15#0| state) (|fifo_m:W0A data| state) (bvor (bvand (|fifo_m:W0D data| state) (|fifo_m:W0M data| state)) (bvand (select (|fifo#15#0| state) (|fifo_m:W0A data| state)) (bvnot (|fifo_m:W0M data| state))))))) ; data
(define-fun |fifo_a| ((state |fifo_s|)) Bool (and
  (|fifo_a 0| state)
  (|fifo_a 1| state)
  (|fifo_a 2| state)
  (|fifo_a 3| state)
  (|fifo_a 4| state)
  (|fifo_a 5| state)
  (|fifo_a 6| state)
  (|fifo_a 7| state)
  (|fifo_a 8| state)
  (|fifo_a 9| state)
  (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_a| (|fifo_h fifo_reader| state))
  (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_a| (|fifo_h fifo_writer| state))
))
(define-fun |fifo_u| ((state |fifo_s|)) Bool (and
  (|fifo_u 0| state)
  (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_u| (|fifo_h fifo_reader| state))
  (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_u| (|fifo_h fifo_writer| state))
))
(define-fun |fifo_i| ((state |fifo_s|)) Bool (and
  (= (= ((_ extract 0 0) (|fifo#56| state)) #b1) false) ; $formal$fifo.sv:189$28_EN
  (= (= ((_ extract 0 0) (|fifo#57| state)) #b1) false) ; $formal$fifo.sv:134$24_EN
  (= (|fifo#4| state) #b00000) ; $auto$async2sync.cc:171:execute$410
  (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_i| (|fifo_h fifo_reader| state))
  (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_i| (|fifo_h fifo_writer| state))
))
(define-fun |fifo_h| ((state |fifo_s|)) Bool (and
  (= (|fifo_is| state) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_is| (|fifo_h fifo_reader| state)))
  (= (= ((_ extract 0 0) (|fifo#5| state)) #b1) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n rst| (|fifo_h fifo_reader| state))) ; $paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000.rst
  (= (|fifo#59| state) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n en| (|fifo_h fifo_reader| state))) ; $paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000.en
  (= (|fifo#21| state) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n clk| (|fifo_h fifo_reader| state))) ; $paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000.clk
  (= (|fifo#16| state) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n addr| (|fifo_h fifo_reader| state))) ; $paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000.addr
  (= (|fifo_is| state) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_is| (|fifo_h fifo_writer| state)))
  (= (= ((_ extract 0 0) (|fifo#5| state)) #b1) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n rst| (|fifo_h fifo_writer| state))) ; $paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000.rst
  (= (|fifo#60| state) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n en| (|fifo_h fifo_writer| state))) ; $paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000.en
  (= (|fifo#21| state) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n clk| (|fifo_h fifo_writer| state))) ; $paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000.clk
  (= (|fifo#10| state) (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_n addr| (|fifo_h fifo_writer| state))) ; $paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000.addr
  (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_h| (|fifo_h fifo_reader| state))
  (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_h| (|fifo_h fifo_writer| state))
))
(define-fun |fifo_t| ((state |fifo_s|) (next_state |fifo_s|)) Bool (and
  (= (|fifo#61| state) (|fifo#57| next_state)) ; $procdff$394 $formal$fifo.sv:134$24_EN
  (= (|fifo#62| state) (|fifo#56| next_state)) ; $procdff$355 $formal$fifo.sv:189$28_EN
  (= (|fifo#6| state) (|fifo#55| next_state)) ; $procdff$360 \_witness_.anyinit_procdff_360
  (= (|fifo#6| state) (|fifo#54| next_state)) ; $procdff$361 \_witness_.anyinit_procdff_361
  (= (|fifo#6| state) (|fifo#53| next_state)) ; $procdff$362 \_witness_.anyinit_procdff_362
  (= (|fifo#16| state) (|fifo#52| next_state)) ; $procdff$363 \_witness_.anyinit_procdff_363
  (= (concat #b000000000000000000000000000 (|fifo#63| state)) (|fifo#51| next_state)) ; $procdff$364 \_witness_.anyinit_procdff_364
  (= (|fifo#10| state) (|fifo#50| next_state)) ; $procdff$365 \_witness_.anyinit_procdff_365
  (= (concat #b000000000000000000000000000 (|fifo#64| state)) (|fifo#49| next_state)) ; $procdff$366 \_witness_.anyinit_procdff_366
  (= (|fifo#66| state) (|fifo#48| next_state)) ; $procdff$369 \_witness_.anyinit_procdff_369
  (= (|fifo#68| state) (|fifo#47| next_state)) ; $procdff$371 \_witness_.anyinit_procdff_371
  (= (|fifo#73| state) (|fifo#46| next_state)) ; $procdff$373 \_witness_.anyinit_procdff_373
  (= (|fifo#82| state) (|fifo#45| next_state)) ; $procdff$375 \_witness_.anyinit_procdff_375
  (= (|fifo#88| state) (|fifo#44| next_state)) ; $procdff$377 \_witness_.anyinit_procdff_377
  (= (|fifo#94| state) (|fifo#43| next_state)) ; $procdff$379 \_witness_.anyinit_procdff_379
  (= (|fifo#95| state) (|fifo#42| next_state)) ; $procdff$381 \_witness_.anyinit_procdff_381
  (= (|fifo#98| state) (|fifo#41| next_state)) ; $procdff$385 \_witness_.anyinit_procdff_385
  (= (|fifo#100| state) (|fifo#40| next_state)) ; $procdff$393 \_witness_.anyinit_procdff_393
  (= (|fifo#104| state) (|fifo#39| next_state)) ; $procdff$397 \_witness_.anyinit_procdff_397
  (= (|fifo#113| state) (|fifo#4| next_state)) ; $procdff$399 $auto$async2sync.cc:171:execute$410
  (= (|fifo#15#1| state) (|fifo#15#0| next_state)) ; data
  (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_t| (|fifo_h fifo_reader| state) (|fifo_h fifo_reader| next_state))
  (|$paramod/addr_gen/MAX_DATA=s32'00000000000000000000000000010000_t| (|fifo_h fifo_writer| state) (|fifo_h fifo_writer| next_state))
)) ; end of module fifo
; yosys-smt2-topmod fifo
; end of yosys output
