class Producer { 
    //Auto-generated fields of the Producer class:
    Main m;
    int pid;
    int wait_time;
    int c;
    
    //Auto-generated constructor:
    //Auto-generated specifications of the constructor Producer:
    ensures Perm(m, write) **
            Perm(pid, write) **
            Perm(wait_time, write) **
            Perm(c, write) **
            (m == m_param) ;
    Producer(Main m_param){
        m = m_param;
    }
    
    
    //Auto-generated functions:
    //Auto-generated specifications of the function produce:
    context Perm(m, read) **
            (m != null) **
            held(m) **
            m.global_permission_invariant() **
            (m.prod_inst == this) ;
    int produce(int c_param){
        wait_time = 100;
        m.process_state = m.process_state[0 -> 2];
        m.event_state = m.event_state[2 -> wait_time];
        loop_invariant true ** 
                Perm(m, read) ** 
                (m != null) ** 
                held(m)  ** 
                m.global_permission_invariant() ** 
                (m.prod_inst == this) ;
        while (m.process_state[0] != -1 || m.event_state[2] != -2) {
            unlock m;
            lock m;
        }
        c_param = (c_param + 1) % 8;
        return c_param;
    }
    
    //Auto-generated specifications of the function run:
    context Perm(m, read) **
            (m != null) **
            Perm(m.prod_inst, read) **
            (m.prod_inst == this) ;
    void run(){
        lock m;
        c = 0;
        loop_invariant true ** 
                Perm(m, read) ** 
                (m != null) ** 
                held(m)  ** 
                m.global_permission_invariant() ** 
                (m.prod_inst == this) ;
        while (true) {
            m.fifo_inst.write_producer(c, 0);
            c = produce(c);
        }
        unlock m;
    }
    
}

