<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.6.0_35" class="java.beans.XMLDecoder"> 
 <object class="com.horstmann.violet.ClassDiagramGraph"> 
  <void method="addNode"> 
   <object class="com.horstmann.violet.PackageNode"> 
    <void method="addChild"> 
     <object id="ClassNode0" class="com.horstmann.violet.ClassNode"> 
      <void property="attributes"> 
       <void property="text"> 
        <string># name : String
# parameter : List&lt;SCVariable&gt;
# returnType : String
# body : List&lt;Expression&gt;
# local_variables : List&lt;SCVariable</string> 
       </void> 
      </void> 
      <void property="methods"> 
       <void property="text"> 
        <string>+ SCFunction(String)
+ SCFunction(String, String)
+ SCFunction(String, String, List&lt;SCVariable&gt;
+ getName() : String
+ getBody() : List&lt;Expression&gt;
+ getParameter() : List&lt;SCVariable&gt;
+ getReturnType() : String
+ addExpression(Expression)
+ addVariable(SCVariable) : boolean
+ getVariable(String) : SCVariable
+ getVariables() : List&lt;SCVariable&gt;
+ existVar(SCVariable) : boolean
+ equals(Object) : boolean
+ hashCode() : int
+ toString() : String</string> 
       </void> 
      </void> 
      <void property="name"> 
       <void property="text"> 
        <string>SCFunction</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode1" class="com.horstmann.violet.ClassNode"> 
      <void property="attributes"> 
       <void property="text"> 
        <string>+ SC_PORT
+ SC_IN
+ SC_OUT
+ SC_INOUT
+ SC_FIFO_IN
+ SC_FIFO_OUT
+ SC_SOCKET</string> 
       </void> 
      </void> 
      <void property="methods"> 
       <void property="text"> 
        <string>SC_SIGNAL : EnumSet&lt;SCPORTSCSOCKETTYPES&gt;
SC_FIFO : EnumSet&lt;SCPORTSCSOCKETTYPES&gt;</string> 
       </void> 
      </void> 
      <void property="name"> 
       <void property="text"> 
        <string>«enumeration»
SCPORTSCSOCKETTYPES</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode2" class="com.horstmann.violet.ClassNode"> 
      <void property="attributes"> 
       <void property="text"> 
        <string># name : String
# sensitive_on : list&lt;SCEvent&gt;
# modifier : EnumSet&lt;SCMODIFIER&gt;
# function : SCFunction
# type : SCPROCESSTYPE</string> 
       </void> 
      </void> 
      <void property="methods"> 
       <void property="text"> 
        <string>+ SCProcess(String)
+ SCProcess(String, SCPROCESSTYPE, SCFunction)
+ SCProcess(String, SCPROCESSTYPE, SCFunction, List&lt;SCEvent&gt;)
+ SCProcess(String, SCPROCESSTYPE, SCFunction, EnumSet&lt;SCMODIFIER&gt;)
+ SCProcess(String, SCPROCESSTYPE, SCFunction, List&lt;SCEvent&gt;, EnumSet&lt;SCMODIFIER&gt;)
+ getName() : String
+ getSensitivity() : List&lt;SCEvent&gt;
+ getFunction() : SCFunction
+ getType() : SCPROCESSTYPE
+ getModifier() : EnumSet&lt;SCMODIFIER&gt;
+ equals(Object)
+ hashCode() : int</string> 
       </void> 
      </void> 
      <void property="name"> 
       <void property="text"> 
        <string>SCProcess</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode3" class="com.horstmann.violet.ClassNode"> 
      <void property="attributes"> 
       <void property="text"> 
        <string># modules : List&lt;SCModuleInstance&gt;
# ports_sockets : List&lt;SCPortSCSocketInstance&gt;
# global_variables : List&lt;SCVariable&gt;
# global_functions : List&lt;SCFunction&gt;</string> 
       </void> 
      </void> 
      <void property="methods"> 
       <void property="text"> 
        <string>+ SCSystem()
+ addPortSocketInstance(SCPortSCSocketInstance) : boolean
+ getPortSocketInstance(String) : SCPortSCSocketInstance
+ getPortSocketInstance() : List&lt;SCPortSCSocketInstance&gt;
+ existPortSocketInstance(SCPortSCSocketInstance) : boolean
+ addModuleInstance(SCModuleInstance) : boolean
+ getModuleInstance(String) : SCModuleInstance
+ getModuleInstance() : List&lt;SCModuleInstance&gt;
+ existModuleInstance(SCModuleInstance) : boolean
+ addGlobalFunction(SCFunction) : boolean
+ getGlobalFunction(String) : SCFunction
+ getGlobalFunction() : List&lt;SCFunction&gt;
+ existGlobalFunction(SCFunction) : boolean
+ addGlobalVariable(SCVariable) : boolean
+ getGlobalVariable(String) : SCVariable
+ getGlobalVariable() : List&lt;SCVariable&gt;
+ existGlobalVariable(SCVariable) : boolean
+ equals(Object) : boolean
+ hashCode() : int
+ load(String)
+ store(String, String)</string> 
       </void> 
      </void> 
      <void property="name"> 
       <void property="text"> 
        <string>SCSystem</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode4" class="com.horstmann.violet.ClassNode"> 
      <void property="attributes"> 
       <void property="text"> 
        <string># name : String
# members : List&lt;SCVariable&gt;
# member_functions : List&lt;SCFunction&gt;
# constructor : SCFunction
# inherit_from : List&lt;SCStruct&gt;
# isPrimChan : boolean</string> 
       </void> 
      </void> 
      <void property="methods"> 
       <void property="text"> 
        <string>+ SCStruct(String)
+ setConstructor(SCFunction)
+ constructor() : SCFunction
+ getName() : String
+ addMember(SCVariable) : boolean
+ addMemberFunction(SCFunction) : boolean
+ existMember(SCVariable) : boolean
+ existMemberFunction(SCFunction) : boolean
+ getMember(String) : SCVariable
+ getMemberFunction(String) : SCFunction
+ getMemberFunctions() : List&lt;SCFunction&gt;
+ getMembers() : List&lt;SCVariable&gt;
+ getFather() : List&lt;SCStruct&gt;
+ addFather(SCStruct)
+ isPrimChan() : boolean
+ setChannel()
+ equals(Object) : boolean
+ hashCode() : int</string> 
       </void> 
      </void> 
      <void property="name"> 
       <void property="text"> 
        <string>SC_Struct</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode5" class="com.horstmann.violet.ClassNode"> 
      <void property="attributes"> 
       <void property="text"> 
        <string># name : String
# port_socket : SCPortSCSocket
# owner : SCModuleInstance
# connected_to_channels : List&lt;SCKnownType&gt;
# moduleInstance_for_socketFunctions : SCModuleInstance
# connected_to_ModuleInstance : List&lt;SCModuleInstance&gt;
# connected_to_portsocketInstance : List&lt;SCModuleInstance&gt;</string> 
       </void> 
      </void> 
      <void property="methods"> 
       <void property="text"> 
        <string>+ SCPortSCSocketInstance(String)
+ SCPortSCSocketInstance(String, SCPortSCSocket)
+ getName() : String
+ getPortSocket() : SCPortSCSocket
+ getOwner() : SCModuleInstance
+ addOwner(SCModuleInstance)
+ addChannel(SCKnownType) : boolean
+ setModuleInstanceWithSocketFunctions(SCModuleInstance) : boolean
+ addPortSocketInstance(SCPortSocketInstance) : boolean
+ addModuleInstance(SCModuleInstance) : boolean
+ getChannel(String) : SCKnownType
+ getModuleInstanceWithSocketFunctions() : SCModuleInstance
+ getPortSocketInstance(String) : SCPortSCSocketInstance
+ getChannels() : List&lt;SCKnowntype&gt;
+ getPortSocketInstances() : List&lt;SCPortSCSocketInstance&gt;
+ getModuleInstance() : List&lt;SCModuleInstance&gt;
+ existChannel(SCKnownType) : boolean
+ existPortSocketInstance(SCPortSCSocketInstance) : booelan
+ existModuleInstance(SCModuleInstance) : boolean
+ equals(Object) : boolean
+ hashCode() : int</string> 
       </void> 
      </void> 
      <void property="name"> 
       <void property="text"> 
        <string>SCPortSCSocketInstance</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode6" class="com.horstmann.violet.ClassNode"> 
      <void property="attributes"> 
       <void property="text"> 
        <string># ports_sockets : List&lt;SCPortSCSocket&gt;
# processes : List&lt;SCProcess&gt;
# modules : List&lt;SCModuelInstance&gt;
# events : List&lt;SCEvent&gt;</string> 
       </void> 
      </void> 
      <void property="methods"> 
       <void property="text"> 
        <string>+ SCModule(String, List&lt;SCModule&gt;)
+ SCModule(String)
+ addPortSocket(SCPortSCSocket) : boolean
+ addProcess(SCProcess) : boolean
+ addModuleInstance(SCModuleInstance) : boolean
+ addEvent(SCEvent) : boolean
+ getPortSocket(String) : SCPortSCSocket
+ getPortsSockets() : List&lt;SCPortSCSocket&gt;
+ getProcess(String) : SCProcess
+ getProcesses() : List&lt;SCProcess&gt;
+ getModuleInstance(String) : SCModuleInstance
+ getModuleInstances() : List&lt;SCModuleInstance
+ getEvent(String) : SCEvent
+ getEvent() : List&lt;SCEvent&gt;
+ existPortSocket(SCPortSCSocket) : boolean
+ existProcess(SCProcess) : boolean
+ existModuleInstance(SCModuleInstance) : boolean
+ existEvent(SCEvent) : boolean
+ equals(Object) : boolean
+ hashCode() : int</string> 
       </void> 
      </void> 
      <void property="name"> 
       <void property="text"> 
        <string>SC_Module</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode7" class="com.horstmann.violet.ClassNode"> 
      <void property="attributes"> 
       <void property="text"> 
        <string># name : String
# type : String
# con_type : SCPORTSCSOCKETTYPES</string> 
       </void> 
      </void> 
      <void property="methods"> 
       <void property="text"> 
        <string>+ SCPortSCSocket(String)
+ SCPortSCSocket(string, String, SCPORTSCSOCKETTYPES)
+ getName() : String
+ getType() : String
+ getContype() : SCPORTSCSOCKETTYPES
+ equals(Object) : boolean
+ hashCode() : int</string> 
       </void> 
      </void> 
      <void property="name"> 
       <void property="text"> 
        <string>SCPortSCSocket</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="InterfaceNode0" class="com.horstmann.violet.InterfaceNode"> 
      <void property="methods"> 
       <void property="text"> 
        <string>+ getName() : String
+ getType() : String
+ print()
+ copy()
+ equals(Object) : boolean
+ hashCode() : int
+ setInitiationValue(Expression)</string> 
       </void> 
      </void> 
      <void property="name"> 
       <void property="text"> 
        <string>«interface»
SCVariable</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode8" class="com.horstmann.violet.ClassNode"> 
      <void property="attributes"> 
       <void property="text"> 
        <string>+ SCCTHREAD
+ SCTHREAD
+ SCMETHOD</string> 
       </void> 
      </void> 
      <void property="name"> 
       <void property="text"> 
        <string>«enumeration»
SCPROCESSTYPE</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode9" class="com.horstmann.violet.ClassNode"> 
      <void property="attributes"> 
       <void property="text"> 
        <string>+ DONTINITIALIZE
+ UNKNOWN
+ NONE</string> 
       </void> 
      </void> 
      <void property="name"> 
       <void property="text"> 
        <string>«enumeration»
SCMODIFIER</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode10" class="com.horstmann.violet.ClassNode"> 
      <void property="name"> 
       <void property="text"> 
        <string>SCEvent</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode11" class="com.horstmann.violet.ClassNode"> 
      <void property="name"> 
       <void property="text"> 
        <string>SCKnownType</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode12" class="com.horstmann.violet.ClassNode"> 
      <void property="name"> 
       <void property="text"> 
        <string>SCModuleInstance</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode13" class="com.horstmann.violet.ClassNode"> 
      <void property="name"> 
       <void property="text"> 
        <string>SCModuleInstance</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode14" class="com.horstmann.violet.ClassNode"> 
      <void property="name"> 
       <void property="text"> 
        <string>SCEvent</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="ClassNode15" class="com.horstmann.violet.ClassNode"> 
      <void property="name"> 
       <void property="text"> 
        <string>SCModuleInstance</string> 
       </void> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="PackageNode0" class="com.horstmann.violet.PackageNode"> 
      <void property="name"> 
       <string>expressions</string> 
      </void> 
     </object> 
    </void> 
    <void method="addChild"> 
     <object id="PackageNode1" class="com.horstmann.violet.PackageNode"> 
      <void property="name"> 
       <string>variables</string> 
      </void> 
     </object> 
    </void> 
    <void property="name"> 
     <string>sc_model</string> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>160.0</double> 
     <double>510.0</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode0"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>857.2704853800327</double> 
     <double>1617.5676213450083</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode1"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1357.1551403430367</double> 
     <double>543.2345492236802</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode2"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>713.2704853800327</double> 
     <double>1179.5676213450083</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode3"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>174.2704853800327</double> 
     <double>1583.5676213450083</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode4"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1379.2704853800328</double> 
     <double>1577.5676213450083</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode5"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>754.2704853800327</double> 
     <double>644.5676213450082</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode6"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1356.2704853800328</double> 
     <double>1122.5676213450083</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode7"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1327.8920711500273</double> 
     <double>802.1085921050735</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="InterfaceNode0"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1425.2704853800328</double> 
     <double>2059.5676213450083</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode8"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>547.0352729012517</double> 
     <double>1344.9932470680778</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode9"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>545.8460657862489</double> 
     <double>1209.4236359577676</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode10"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>428.1145614009796</double> 
     <double>1304.560205157985</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode11"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>833.6341876169074</double> 
     <double>541.0892373262382</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode12"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>981.0958698772448</double> 
     <double>538.7108230962326</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode13"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1730.2963523289593</double> 
     <double>1255.8027134428737</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode14"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1733.8639736739674</double> 
     <double>1329.533554573042</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="ClassNode15"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>202.1652095504626</double> 
     <double>1462.724751453347</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="PackageNode0"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>614.8200784564067</double> 
     <double>2019.2736812746198</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object idref="PackageNode1"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1771.9186013540543</double> 
     <double>2107.2750077848214</double> 
    </void> 
   </object> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
   </object> 
   <object idref="ClassNode6"/> 
   <object idref="ClassNode4"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode4"/> 
   <object idref="ClassNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode4"/> 
   <object idref="InterfaceNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode6"/> 
   <object idref="ClassNode2"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode2"/> 
   <object idref="ClassNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode3"/> 
   <object idref="ClassNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode3"/> 
   <object idref="InterfaceNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode6"/> 
   <object idref="ClassNode7"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode5"/> 
   <object idref="ClassNode7"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode3"/> 
   <object idref="ClassNode5"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode7"/> 
   <object idref="ClassNode1"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode2"/> 
   <object idref="ClassNode9"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode2"/> 
   <object idref="ClassNode8"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode0"/> 
   <object idref="InterfaceNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode2"/> 
   <object idref="ClassNode10"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode3"/> 
   <object idref="ClassNode15"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode5"/> 
   <object idref="ClassNode11"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode5"/> 
   <object idref="ClassNode12"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
   </object> 
   <object idref="PackageNode1"/> 
   <object idref="InterfaceNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode0"/> 
   <object idref="PackageNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode6"/> 
   <object idref="ClassNode13"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="ClassNode6"/> 
   <object idref="ClassNode14"/> 
  </void> 
 </object> 
</java> 
